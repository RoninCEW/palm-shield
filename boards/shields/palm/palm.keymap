/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------
            // |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  |
            // |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |
            // |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  |
            //             | ESC | SPC | TAB |   | ENT | BSPC  | DEL |
            bindings = <
            &kp Q       &kp W       &kp F        &kp P        &kp B         &kp J       &kp L        &kp U        &kp Y       &kp SEMI
            &mt LCMD A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G         &kp M       &mt LSHFT N  &mt LCTRL E  &mt LALT I  &mt LCMD O
            &kp Z       &kp X       &kp C        &kp D        &kp V         &kp K       &kp H        &kp COMMA    &kp DOT     &kp FSLH
                                    &kp ESC      &lt 1 SPACE  &kp TAB       &lt 3 RET   &lt 2 BSPC   &kp DEL
            >;
        };
        
        navigation {
            // ------------------------------------------------------------------
            // |     |  7  |  8  |  9  |     |    |     | CUT  | COPY | PAST |     |
            // |     |  4  |  5  |  6  |     |    |     | LEFT |  UP  | RIGT |     |
            // |     |  1  |  2  |  3  |     |    |     | UNDO | DOWN | REDO |     |
            //             |  .  |  0  |     |    |     |      |      |
            bindings = <
            &trans  &kp N7       &kp N8        &kp N9        &trans         &trans  &kp K_CUT   &kp K_COPY  &kp K_PASTE  &trans
            &trans  &mt LALT N4  &mt LCTRL N5  &mt LSHFT N6  &trans         &trans  &kp LEFT    &kp UP      &kp RIGHT    &trans
            &trans  &kp N1       &kp N2        &kp N3        &trans         &trans  &kp K_UNDO  &kp DOWN    &kp K_REDO   &trans
                                 &kp DOT       &kp N0        &trans         &trans  &trans      &trans
            >; 
        };

        symbol {
            // ------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |     |  `  |  '  |  "  |     |
            // | "|" |  &  |  ;  |  =  |  _  |   |  [  |  ]  |  (  |  )  |  \  |
            // |  /  |  *  |  +  |  -  |  ^  |   |  <  |  >  |  {  |  }  |     |
            //             |     |     |     |   |     |     |     |
            bindings = <
            &kp EXCL  &kp AT     &kp HASH  &kp DLLR   &kp PRCNT      &trans    &kp GRAVE  &kp APOS  &kp DQT   &trans
            &kp PIPE  &kp AMPS   &kp SEMI  &kp EQUAL  &kp UNDER      &kp LBKT  &kp RBKT     &kp LPAR  &kp RPAR  &kp BSLH
            &kp FSLH  &kp ASTRK  &kp PLUS  &kp MINUS  &kp CARET      &kp LT    &kp GT     &kp LBRC  &kp RBRC  &trans
                                 &trans    &trans     &trans         &trans    &trans     &trans
            >;
        };

        bt {
            // ------------------------------------------------------------------
            // |     |     |     |     |       |   |     |     |     |     |     |
            // | BT1 | BT2 | BT3 | BT4 |  BT5  |   |     |     |     |     |     |
            // |     |     |     |     | BTCLR |   |     |     |     |     |     |
            //             |     |     |       |   |     |     |     |
            bindings = <
            &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans
            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &trans  &trans  &trans  &trans
            &trans        &trans        &trans        &trans        &bt BT_CLR        &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };
    };
};
